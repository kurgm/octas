{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "lib/ai.js",
    "lib/worker.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "const dx = [0, 1, 1, 1, 0, -1, -1, -1];\nconst dy = [-1, -1, 0, 1, 1, 1, 0, -1];\nconst INF = 1000000;\nlet searchDepth = 4;\nlet startMs = null;\n\nconst detectTriangle = function(edge, nowX, nowY, nowDirection, {height, width}) {\n\tfor (let i = 0; i < 8; i++) {\n\t\tif (i === nowDirection) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (nowDirection !== (i + 1) % 8 && nowDirection !== (i + 2) % 8 && nowDirection !== (i - 1 + 8) % 8 && nowDirection !== (i - 2 + 8) % 8) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (edge[nowX][nowY][i] === false) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst newX = nowX + dx[i];\n\t\tconst newY = nowY + dy[i];\n\t\tif (newX < 0 || newX >= width + 2 || newY < 0 || newY >= height + 2) {\n\t\t\tcontinue;\n\t\t}\n\t\tfor (let j = 0; j < 8; j++) {\n\t\t\tif (newX + dx[j] === nowX + dx[nowDirection] && newY + dy[j] === nowY + dy[nowDirection]) {\n\t\t\t\tif (edge[newX][newY][j] === true) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n};\n\nconst updateEdge = function(edge, nowX, nowY, nowDirection, {height, width}) {\n\tconst ret = [];\n\tlet newX = nowX + dx[nowDirection];\n\tlet newY = nowY + dy[nowDirection];\n\tret.push([nowX, nowY, nowDirection]);\n\tret.push([newX, newY, (nowDirection + 4) % 8]);\n\tedge[nowX][nowY][nowDirection] = true;\n\tedge[newX][newY][(nowDirection + 4) % 8] = true;\n\n\tlet nowDX = dx[nowDirection];\n\tlet nowDY = dy[nowDirection];\n\tlet preX = newX;\n\tlet preY = newY;\n\n\twhile (preX === 0 || preX === width + 1 || preY === 0 || preY === height + 1) {\n\t\tif (preX === 0 || preX === width + 1) {\n\t\t\tnowDX *= -1;\n\t\t} else {\n\t\t\tnowDY *= -1;\n\t\t}\n\t\tnewX = preX + nowDX;\n\t\tnewY = preY + nowDY;\n\t\tfor (let i = 0; i < 8; i++) {\n\t\t\tif (dx[i] === nowDX && dy[i] === nowDY) {\n\t\t\t\tret.push([preX, preY, i]);\n\t\t\t\tret.push([newX, newY, (i + 4) % 8]);\n\t\t\t\tedge[preX][preY][i] = true;\n\t\t\t\tedge[newX][newY][(i + 4) % 8] = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tpreX = newX;\n\t\tpreY = newY;\n\t}\n\treturn ret;\n};\n\nconst whereToMove = function(edge, nowX, nowY, nowDirection, {height, width}) {\n\tconst newX = nowX + dx[nowDirection];\n\tconst newY = nowY + dy[nowDirection];\n\tconst centerX = (width + 1) / 2;\n\tif (newX < 0 || newX >= width + 2 || newY < 0 || newY >= height + 2) {\n\t\treturn [-1, -1];\n\t}\n\tif (edge[nowX][nowY][nowDirection] === true) {\n\t\treturn [-1, -1];\n\t}\n\tif (newX > 0 && newX < width + 1 && newY > 0 && newY < height + 1) {\n\t\treturn [newX, newY];\n\t}\n\tif ((newX === 0 && newY === 0) || (newX === width + 1 && newY === height + 1)) {\n\t\treturn [-1, -1];\n\t}\n\tif ((newX === width + 1 && newY === 0) || (newX === 0 && newY === height + 1)) {\n\t\treturn [-1, -1];\n\t}\n\tif (newX === 0) {\n\t\tif (nowDirection === 6) {\n\t\t\treturn [-1, -1];\n\t\t} else if (nowY + dy[nowDirection] * 2 === 0) {\n\t\t\treturn [2, 1];\n\t\t} else if (nowY + dy[nowDirection] * 2 === height + 1) {\n\t\t\treturn [2, height];\n\t\t}\n\t\treturn [nowX, nowY + dy[nowDirection] * 2];\n\t}\n\tif (newX === width + 1) {\n\t\tif (nowDirection === 2) {\n\t\t\treturn [-1, -1];\n\t\t} else if (nowY + dy[nowDirection] * 2 === 0) {\n\t\t\treturn [width - 1, 1];\n\t\t} else if (nowY + dy[nowDirection] * 2 === height + 1) {\n\t\t\treturn [width - 1, height];\n\t\t}\n\t\treturn [nowX, nowY + dy[nowDirection] * 2];\n\t}\n\tif (newY === 0) {\n\t\tif (newX === centerX) {\n\t\t\treturn [centerX, 0];\n\t\t} else if (nowDirection === 0) {\n\t\t\treturn [-1, -1];\n\t\t} else if (nowX + dx[nowDirection] * 2 === 0) {\n\t\t\treturn [1, 2];\n\t\t} else if (nowX + dx[nowDirection] * 2 === width + 1) {\n\t\t\treturn [width, 2];\n\t\t}\n\t\treturn [nowX + dx[nowDirection] * 2, nowY];\n\t}\n\tif (newY === height + 1) {\n\t\tif (newX === centerX) {\n\t\t\treturn [centerX, height + 1];\n\t\t} else if (nowDirection === 4) {\n\t\t\treturn [-1, -1];\n\t\t} else if (nowX + dx[nowDirection] * 2 === 0) {\n\t\t\treturn [1, height - 1];\n\t\t} else if (nowX + dx[nowDirection] * 2 === width + 1) {\n\t\t\treturn [width, height - 1];\n\t\t}\n\t\treturn [nowX + dx[nowDirection] * 2, nowY];\n\t}\n\treturn [-1, -1];\n};\n\nconst canNotMove = function(edge, nowX, nowY, {height, width}) {\n\tfor (let i = 0; i < 8; i++) {\n\t\tconst [toX, toY] = whereToMove(edge, nowX, nowY, i, {height, width});\n\t\tif (toX !== -1 && toY !== -1) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n\nconst movesToEdge = function(moveHistory, {height, width}) {\n\tconst edge = new Array(width + 2);\n\tfor (let i = 0; i < width + 2; i++) {\n\t\tedge[i] = new Array(height + 2);\n\t\tfor (let j = 0; j < height + 2; j++) {\n\t\t\tedge[i][j] = new Array(8).fill(false);\n\t\t}\n\t}\n\tlet x = (width + 1) / 2;\n\tlet y = (height + 1) / 2;\n\tfor (const direction of moveHistory) {\n\t\tedge[x][y][direction] = true;\n\t\tx += dx[direction];\n\t\ty += dy[direction];\n\t\tedge[x][y][(direction + 4) % 8] = true;\n\t}\n\treturn {edge, x, y};\n};\n\nconst distanceToGoal = function(edge, X, Y, {height, width}) {\n\tif (canNotMove(edge, X, Y, {height, width}) === true) {\n\t\treturn INF;\n\t}\n\treturn Y * 20 + Math.abs(X - (width + 1) / 2) * (Y < (height - 1) / 2 ? 1 : -1) + Math.floor(Math.random() * 4) - 2;\n};\n\nconst depthSearch = function(depth, edge, nowX, nowY, {height, width}) {\n\tif (searchDepth === 4 && new Date().getTime() - startMs > 10000) {\n\t\treturn {directions: [], score: -1};\n\t}\n\tlet ret = INF;\n\tlet retIndices = [];\n\tif (depth === searchDepth) {\n\t\tfor (let i = 0; i < 8; i++) {\n\t\t\tconst [toX, toY] = whereToMove(edge, nowX, nowY, i, {height, width});\n\t\t\tif (toX === -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst repair = updateEdge(edge, nowX, nowY, i, {height, width});\n\t\t\tconst tmpVal = distanceToGoal(edge, toX, toY, {height, width});\n\t\t\tif (ret > tmpVal) {\n\t\t\t\tret = tmpVal;\n\t\t\t\tretIndices = [i];\n\t\t\t}\n\t\t\tfor (let j = 0; j < repair.length; j++) {\n\t\t\t\tedge[repair[j][0]][repair[j][1]][repair[j][2]] = false;\n\t\t\t}\n\t\t}\n\t\treturn {directions: retIndices, score: ret};\n\t}\n\tfor (let i = 0; i < 8; i++) {\n\t\tconst [toX, toY] = whereToMove(edge, nowX, nowY, i, {height, width});\n\t\tif (toX === -1) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (toY === 0) {\n\t\t\tif (depth % 2 === 0) {\n\t\t\t\treturn {directions: [i], score: -INF};\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tif (toY === height + 1) {\n\t\t\tif (depth % 2 === 1) {\n\t\t\t\treturn {directions: [i], score: -INF};\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tconst repair = updateEdge(edge, nowX, nowY, i, {height, width});\n\t\tif (canNotMove(edge, toX, toY, {height, width}) === false) {\n\t\t\tif (detectTriangle(edge, nowX, nowY, i, {height, width}) === true) {\n\t\t\t\tconst {directions, score: tmpVal} = depthSearch(depth, edge, toX, toY, {height, width});\n\t\t\t\tif (ret > tmpVal) {\n\t\t\t\t\tret = tmpVal;\n\t\t\t\t\tretIndices = [i].concat(directions);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst tmpVal = depthSearch(depth + 1, edge, toX, toY, {height, width}).score * -1;\n\t\t\t\tif (ret > tmpVal) {\n\t\t\t\t\tret = tmpVal;\n\t\t\t\t\tretIndices = [i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (let j = 0; j < repair.length; j++) {\n\t\t\tedge[repair[j][0]][repair[j][1]][repair[j][2]] = false;\n\t\t}\n\t}\n\treturn {directions: retIndices, score: ret};\n};\n\nconst onlyOneWay = function(edge, nowX, nowY, {height, width}) {\n\tlet counter = 0;\n\tfor (let i = 0; i < 8; i++) {\n\t\tconst [toX, toY] = whereToMove(edge, nowX, nowY, i, {height, width});\n\t\tif (toX !== -1 && toY !== -1) {\n\t\t\tcounter += 1;\n\t\t}\n\t}\n\treturn counter === 1;\n};\n\nconst aiLogic = function(moveHistory, {height, width}) {\n\tstartMs = new Date().getTime();\n\tconst {edge, x: nowX, y: nowY} = movesToEdge(moveHistory, {height, width});\n\n\tif (onlyOneWay(edge, nowX, nowY, {height, width}) === true) {\n\t\tfor (let i = 0; i < 8; i++) {\n\t\t\tconst [toX, toY] = whereToMove(edge, nowX, nowY, i, {height, width});\n\t\t\tif (toX !== -1 && toY !== -1) {\n\t\t\t\treturn [i];\n\t\t\t}\n\t\t}\n\t}\n\n\tlet ret = depthSearch(0, edge, nowX, nowY, {height, width}).directions;\n\tif (new Date().getTime() - startMs > 10000) {\n\t\tsearchDepth = 2;\n\t\tret = depthSearch(0, edge, nowX, nowY, {height, width}).directions;\n\t\tsearchDepth = 4;\n\t\t// Next step may fit in 10 seconds...\n\t\tret = ret.slice(0, 1);\n\t}\n\n\tif (ret.length === 0) {\n\t\tfor (let i = 0; i < 8; i++) {\n\t\t\tconst [toX, toY] = whereToMove(edge, nowX, nowY, i, {height, width});\n\t\t\tif (toX !== -1 && toY !== -1) {\n\t\t\t\treturn [i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ret;\n};\n\nmodule.exports = aiLogic;\n",
    "/* eslint-env worker */\nconst ai = require('./ai');\n\nonmessage = (evt) => {\n\tconst {width, height, moves} = JSON.parse(evt.data);\n\tconst directions = ai(moves, {height, width});\n\tpostMessage(JSON.stringify(directions));\n};\n"
  ]
}